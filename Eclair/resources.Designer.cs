//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eclair {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Eclair.resources", typeof(resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mini-Audio Player.
        /// </summary>
        internal static string android_notifications_mplayer {
            get {
                return ResourceManager.GetString("android.notifications.mplayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Now Playing: .
        /// </summary>
        internal static string mplayer_nowplaying {
            get {
                return ResourceManager.GetString("mplayer.nowplaying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pause.
        /// </summary>
        internal static string mplayer_pause {
            get {
                return ResourceManager.GetString("mplayer.pause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Play.
        /// </summary>
        internal static string mplayer_play {
            get {
                return ResourceManager.GetString("mplayer.play", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stop.
        /// </summary>
        internal static string mplayer_stop {
            get {
                return ResourceManager.GetString("mplayer.stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на About Eclair.
        /// </summary>
        internal static string ui_about {
            get {
                return ResourceManager.GetString("ui.about", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на created by.
        /// </summary>
        internal static string ui_about_createdby {
            get {
                return ResourceManager.GetString("ui.about.createdby", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Eclair&apos;s source code is licensed under the MIT license..
        /// </summary>
        internal static string ui_about_license {
            get {
                return ResourceManager.GetString("ui.about.license", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Official Eclair GitHub repository.
        /// </summary>
        internal static string ui_about_originalrepo {
            get {
                return ResourceManager.GetString("ui.about.originalrepo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Version: .
        /// </summary>
        internal static string ui_about_version {
            get {
                return ResourceManager.GetString("ui.about.version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All audio formats.
        /// </summary>
        internal static string ui_ofd_audiofiles {
            get {
                return ResourceManager.GetString("ui.ofd.audiofiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open Music File.
        /// </summary>
        internal static string ui_ofd_title {
            get {
                return ResourceManager.GetString("ui.ofd.title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Back.
        /// </summary>
        internal static string ui_player_back {
            get {
                return ResourceManager.GetString("ui.player.back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select File.
        /// </summary>
        internal static string ui_selectfile {
            get {
                return ResourceManager.GetString("ui.selectfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings.
        /// </summary>
        internal static string ui_settings {
            get {
                return ResourceManager.GetString("ui.settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Round music icon.
        /// </summary>
        internal static string ui_settings_usecircleiconanimation {
            get {
                return ResourceManager.GetString("ui.settings.usecircleiconanimation", resourceCulture);
            }
        }
    }
}

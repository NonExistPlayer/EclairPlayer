// log2markdown.csx created by NonExistPlayer for EclairPlayer (https://github.com/NonExistPlayer/EclairPlayer)
using System;
using System.IO;
using System.Linq;

#nullable enable

Console.WriteLine("-----log2markdown.csx-----");

readonly static string logspath = OperatingSystem.IsWindows() ? 
    $"{Environment.GetEnvironmentVariable("LOCALAPPDATA")}\\EclairPlayer\\logs\\" : 
    $"{Environment.GetEnvironmentVariable("HOME")}/.eclairplayer/logs/"; // linux

static void AddUntil(ref int i, string line, ref string target, char endchar) {
    for (; i < line.Length; i++) {
        char c = line[i];
        if (c == endchar) break;
        target += c;
    }
}

static string? GetOldestFile() {
    var files = Directory.GetFiles(logspath);

    if (files.Length == 0) return null;

    return files
            .Select(f => new FileInfo(f))
            .OrderBy(f => f.CreationTime)
            .First()
            .FullName;
}

string[] args = Environment.CommandLine.Split(' ');
string? targetfile;

if (args.Length > 2) {
    targetfile = string.Join(' ', args[2..]);
    if (!File.Exists(targetfile)) {
        Console.WriteLine("-----Specified file does not exists.-----");
        Environment.Exit(1);
    }
}
else {
    targetfile = GetOldestFile();
    if (targetfile is null) {
        Console.WriteLine("-----GetOldestFile() returned null.------");
        Environment.Exit(1);
    }
}

string[] lines = File.ReadAllLines(targetfile);

StreamWriter writer = new(File.OpenWrite(Path.ChangeExtension(targetfile, "md")));

writer.WriteLine("This file generated by `log2markdown.csx`");
writer.WriteLine("# Eclair Log");
writer.WriteLine("|Time|Caller|Type|Message|");
writer.WriteLine("|:-:|:-:|:-:|:--|");

// [00:00:00] (caller) type: message
foreach (string line in lines) {
    if (line == "---END-OF-LOG---") break;
    string time = line[1..9];
    string caller = "", type = "", message = "";
    int offset = 12;

    AddUntil(ref offset, line, ref caller, ')');

    caller = caller.Replace("<", "\\<").Replace(">", "\\>");

    offset += 2; // skip space

    AddUntil(ref offset, line, ref type, ':');

    offset += 2; // skip space

    AddUntil(ref offset, line, ref message, '\0');

    writer.WriteLine($"|{time}|{caller}|{type}|{message}|");
}

writer.WriteLine("\n**END OF LOG**");

writer.Close();

Console.WriteLine("----END OF LOG REACHED-----");